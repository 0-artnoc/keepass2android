package com.inputstick.api.layout;

public class SlovakLayout extends KeyboardLayout {
	
	public static final String LOCALE_NAME = "sk-SK";
	
	public static final int LUT[][] = {
		/*	0	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	1	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	2	*/	{	0	,	0x02b	,	(int)'1'	,	-1		,	0x007	,	0	}	,
		/*	3	*/	{	0	,	0x13e	,	(int)'2'	,	-1		,	0x2c7	,	0	}	,
		/*	4	*/	{	0	,	0x161	,	(int)'3'	,	-1		,	0x05e	,	0	}	,
		/*	5	*/	{	0	,	0x10d	,	(int)'4'	,	-1		,	0x2d8	,	0	}	,
		/*	6	*/	{	0	,	0x165	,	(int)'5'	,	-1		,	0x0b0	,	0	}	,
		/*	7	*/	{	0	,	0x17e	,	(int)'6'	,	-1		,	0x2db	,	0	}	,
		/*	8	*/	{	0	,	0x0fd	,	(int)'7'	,	-1		,	0x060	,	0	}	,
		/*	9	*/	{	0	,	0x0e1	,	(int)'8'	,	-1		,	0x2d9	,	0	}	,
		/*	0a	*/	{	0	,	0x0ed	,	(int)'9'	,	-1		,	0x0b4	,	0	}	,
		/*	0b	*/	{	0	,	0x0e9	,	(int)'0'	,	-1		,	0x2dd	,	0	}	,
		/*	0c	*/	{	0	,	0x03d	,	0x025		,	-1		,	0x0a8	,	0	}	,
		/*	0d	*/	{	0	,	0x0b4	,	0x2c7		,	-1		,	0x0b8	,	0	}	,
		/*	0e	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	0f	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		
		/*	10	*/	{	1	,	'q'		,	'Q'			,	-1		,	0x05c	,	0	}	,
		/*	11	*/	{	1	,	'w'		,	'W'			,	-1		,	0x07c	,	0	}	,
		/*	12	*/	{	1	,	'e'		,	'E'			,	-1		,	0x20ac	,	0	}	,
		/*	13	*/	{	1	,	'r'		,	'R'			,	-1		,	-1		,	0	}	,
		/*	14	*/	{	1	,	't'		,	'T'			,	-1		,	-1		,	0	}	,
		/*	15	*/	{	1	,	'y'		,	'Y'			,	-1		,	-1		,	0	}	,
		/*	16	*/	{	1	,	'u'		,	'U'			,	-1		,	-1		,	0	}	,
		/*	17	*/	{	1	,	'i'		,	'I'			,	-1		,	-1		,	0	}	,
		/*	18	*/	{	1	,	'o'		,	'O'			,	-1		,	-1		,	0	}	,
		/*	19	*/	{	1	,	'p'		,	'P'			,	-1		,	0x027	,	0	}	,
		/*	1a	*/	{	0	,	0x0fa	,	0x02f		,	-1		,	0x0f7	,	0	}	,
		/*	1b	*/	{	0	,	0x0e4	,	0x028		,	0x01b	,	0x0d7	,	0	}	,
		/*	1c	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	1d	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	1e	*/	{	1	,	'a'		,	'A'			,	-1		,	-1		,	0	}	,
		/*	1f	*/	{	1	,	's'		,	'S'			,	-1		,	0x111	,	0	}	,
		
		/*	20	*/	{	1	,	'd'		,	'D'			,	-1		,	0x110	,	0	}	,
		/*	21	*/	{	1	,	'f'		,	'F'			,	-1		,	0x05b	,	0	}	,
		/*	22	*/	{	1	,	'g'		,	'G'			,	-1		,	0x05d	,	0	}	,
		/*	23	*/	{	1	,	'h'		,	'H'			,	-1		,	-1		,	0	}	,
		/*	24	*/	{	1	,	'j'		,	'J'			,	-1		,	-1		,	0	}	,
		/*	25	*/	{	1	,	'k'		,	'K'			,	-1		,	0x142	,	0	}	,
		/*	26	*/	{	1	,	'l'		,	'L'			,	-1		,	0x141	,	0	}	,
		/*	27	*/	{	0	,	0x0f4	,	0x022		,	0x01d	,	0x024	,	0	}	,
		/*	28	*/	{	0	,	0x0a7	,	0x021		,	-1		,	0x0df	,	0	}	,
		/*	29	*/	{	0	,	0x03b	,	0x0b0		,	-1		,	-1		,	0	}	,
		/*	2a	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	2b	*/	{	0	,	0x148	,	0x029		,	0x01c	,	0x0a4	,	0	}	,
		/*	2c	*/	{	1	,	'z'		,	'Z'			,	-1		,	0x03e	,	0	}	,
		/*	2d	*/	{	1	,	'x'		,	'X'			,	-1		,	0x023	,	0	}	,
		/*	2e	*/	{	1	,	'c'		,	'C'			,	-1		,	0x026	,	0	}	,
		/*	2f	*/	{	1	,	'v'		,	'V'			,	-1		,	0x040	,	0	}	,
		
		/*	30	*/	{	1	,	'b'		,	'B'			,	-1		,	0x07b	,	0	}	,
		/*	31	*/	{	1	,	'n'		,	'N'			,	-1		,	0x07d	,	0	}	,
		/*	32	*/	{	1	,	'm'		,	'M'			,	-1		,	-1		,	0	}	,
		/*	33	*/	{	0	,	0x02c	,	0x03f		,	-1		,	0x03c	,	0	}	,
		/*	34	*/	{	0	,	0x02e	,	0x03a		,	-1		,	0x03e	,	0	}	,		
		/*	35	*/	{	0	,	0x02d	,	0x05f		,	-1		,	0x02a	,	0	}	,
		/*	36	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	37	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	38	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	39	*/	{	0	,	0x020	,	0x020		,	0x020	,	-1		,	0	}	,
		/*	3a	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	3b	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	3c	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	3d	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	3e	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		/*	3f	*/	{	-1	,	0		,	0			,	0		,	0		,	0	}	,
		
		/*	40	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	41	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	42	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	43	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	44	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	45	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	46	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	47	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,	
		/*	48	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	49	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4a	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4b	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4c	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4d	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4e	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	4f	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		
		/*	50	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	51	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	52	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	53	*/	{	0	,	0x02c		,	0x02c	,	-1		,	-1		,	0	}	,
		/*	54	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	55	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	56	*/	{	0	,	0x026		,	0x02a	,	0x01c	,	0x03c	,	0	}	,
		/*	57	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,	
		/*	58	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	59	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5a	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5b	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5c	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5d	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5e	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		/*	5f	*/	{	-1	,	0			,	0		,	0		,	0		,	0	}	,
		
	
		
	};
	
	public static final int DEADKEYS[] = {
		0x02c7, 0x005e, 0x02d8, 0x00b0, 0x02db, 0x02d9, 0x00b4, 0x02dd, 0x00a8, 0x00b4, 0x02c7, 0x00b8, 0x00b0
	};
	
	public static final int DEADKEY_LUT[][] = {
		{	0x02c7	,	0x006e	,	0x0148	}	,
		{	0x02c7	,	0x0063	,	0x010d	}	,
		{	0x02c7	,	0x007a	,	0x017e	}	,
		{	0x02c7	,	0x0064	,	0x010f	}	,
		{	0x02c7	,	0x0073	,	0x0161	}	,
		{	0x02c7	,	0x006c	,	0x013e	}	,
		{	0x02c7	,	0x0065	,	0x011b	}	,
		{	0x02c7	,	0x0072	,	0x0159	}	,
		{	0x02c7	,	0x0074	,	0x0165	}	,
		{	0x02c7	,	0x004e	,	0x0147	}	,
		{	0x02c7	,	0x0043	,	0x010c	}	,
		{	0x02c7	,	0x005a	,	0x017d	}	,
		{	0x02c7	,	0x0044	,	0x010e	}	,
		{	0x02c7	,	0x0053	,	0x0160	}	,
		{	0x02c7	,	0x004c	,	0x013d	}	,
		{	0x02c7	,	0x0045	,	0x011a	}	,
		{	0x02c7	,	0x0052	,	0x0158	}	,
		{	0x02c7	,	0x0054	,	0x0164	}	,
		{	0x02c7	,	0x0020	,	0x02c7	}	,
		{	0x005e	,	0x0061	,	0x00e2	}	,
		{	0x005e	,	0x0069	,	0x00ee	}	,
		{	0x005e	,	0x006f	,	0x00f4	}	,
		{	0x005e	,	0x0041	,	0x00c2	}	,
		{	0x005e	,	0x0049	,	0x00ce	}	,
		{	0x005e	,	0x004f	,	0x00d4	}	,
		{	0x005e	,	0x0020	,	0x005e	}	,
		{	0x005e	,	0x0061	,	0x0103	}	,
		{	0x005e	,	0x0041	,	0x0102	}	,
		{	0x005e	,	0x0020	,	0x02d8	}	,
		{	0x00b0	,	0x0075	,	0x016f	}	,
		{	0x00b0	,	0x0055	,	0x016e	}	,
		{	0x00b0	,	0x0020	,	0x00b0	}	,
		{	0x02db	,	0x0061	,	0x0105	}	,
		{	0x02db	,	0x0065	,	0x0119	}	,
		{	0x02db	,	0x0041	,	0x0104	}	,
		{	0x02db	,	0x0045	,	0x0118	}	,
		{	0x02db	,	0x0020	,	0x02db	}	,
		{	0x02d9	,	0x007a	,	0x017c	}	,
		{	0x02d9	,	0x005a	,	0x017b	}	,
		{	0x02d9	,	0x0020	,	0x02d9	}	,
		{	0x00b4	,	0x006e	,	0x0144	}	,
		{	0x00b4	,	0x0063	,	0x0107	}	,
		{	0x00b4	,	0x007a	,	0x017a	}	,
		{	0x00b4	,	0x0061	,	0x00e1	}	,
		{	0x00b4	,	0x0073	,	0x015b	}	,
		{	0x00b4	,	0x006c	,	0x013a	}	,
		{	0x00b4	,	0x0065	,	0x00e9	}	,
		{	0x00b4	,	0x0072	,	0x0155	}	,
		{	0x00b4	,	0x0075	,	0x00fa	}	,
		{	0x00b4	,	0x0069	,	0x00ed	}	,
		{	0x00b4	,	0x0079	,	0x00fd	}	,
		{	0x00b4	,	0x006f	,	0x00f3	}	,
		{	0x00b4	,	0x004e	,	0x0143	}	,
		{	0x00b4	,	0x0043	,	0x0106	}	,
		{	0x00b4	,	0x005a	,	0x0179	}	,
		{	0x00b4	,	0x0041	,	0x00c1	}	,
		{	0x00b4	,	0x0053	,	0x015a	}	,
		{	0x00b4	,	0x004c	,	0x0139	}	,
		{	0x00b4	,	0x0045	,	0x00c9	}	,
		{	0x00b4	,	0x0052	,	0x0154	}	,
		{	0x00b4	,	0x0055	,	0x00da	}	,
		{	0x00b4	,	0x0049	,	0x00cd	}	,
		{	0x00b4	,	0x0059	,	0x00dd	}	,
		{	0x00b4	,	0x004f	,	0x00d3	}	,
		{	0x00b4	,	0x0020	,	0x00b4	}	,
		{	0x02dd	,	0x0075	,	0x0171	}	,
		{	0x02dd	,	0x006f	,	0x0151	}	,
		{	0x02dd	,	0x0055	,	0x0170	}	,
		{	0x02dd	,	0x004f	,	0x0150	}	,
		{	0x02dd	,	0x0020	,	0x02dd	}	,
		{	0x00a8	,	0x0061	,	0x00e4	}	,
		{	0x00a8	,	0x0065	,	0x00eb	}	,
		{	0x00a8	,	0x0075	,	0x00fc	}	,
		{	0x00a8	,	0x006f	,	0x00f6	}	,
		{	0x00a8	,	0x0041	,	0x00c4	}	,
		{	0x00a8	,	0x0045	,	0x00cb	}	,
		{	0x00a8	,	0x0055	,	0x00dc	}	,
		{	0x00a8	,	0x004f	,	0x00d6	}	,
		{	0x00a8	,	0x0020	,	0x00a8	}	,
		{	0x00b4	,	0x006e	,	0x0144	}	,
		{	0x00b4	,	0x0063	,	0x0107	}	,
		{	0x00b4	,	0x007a	,	0x017a	}	,
		{	0x00b4	,	0x0061	,	0x00e1	}	,
		{	0x00b4	,	0x0073	,	0x015b	}	,
		{	0x00b4	,	0x006c	,	0x013a	}	,
		{	0x00b4	,	0x0065	,	0x00e9	}	,
		{	0x00b4	,	0x0072	,	0x0155	}	,
		{	0x00b4	,	0x0075	,	0x00fa	}	,
		{	0x00b4	,	0x0069	,	0x00ed	}	,
		{	0x00b4	,	0x0079	,	0x00fd	}	,
		{	0x00b4	,	0x006f	,	0x00f3	}	,
		{	0x00b4	,	0x004e	,	0x0143	}	,
		{	0x00b4	,	0x0043	,	0x0106	}	,
		{	0x00b4	,	0x005a	,	0x0179	}	,
		{	0x00b4	,	0x0041	,	0x00c1	}	,
		{	0x00b4	,	0x0053	,	0x015a	}	,
		{	0x00b4	,	0x004c	,	0x0139	}	,
		{	0x00b4	,	0x0045	,	0x00c9	}	,
		{	0x00b4	,	0x0052	,	0x0154	}	,
		{	0x00b4	,	0x0055	,	0x00da	}	,
		{	0x00b4	,	0x0049	,	0x00cd	}	,
		{	0x00b4	,	0x0059	,	0x00dd	}	,
		{	0x00b4	,	0x004f	,	0x00d3	}	,
		{	0x00b4	,	0x0020	,	0x00b4	}	,
		{	0x02c7	,	0x006e	,	0x0148	}	,
		{	0x02c7	,	0x0063	,	0x010d	}	,
		{	0x02c7	,	0x007a	,	0x017e	}	,
		{	0x02c7	,	0x0064	,	0x010f	}	,
		{	0x02c7	,	0x0073	,	0x0161	}	,
		{	0x02c7	,	0x006c	,	0x013e	}	,
		{	0x02c7	,	0x0065	,	0x011b	}	,
		{	0x02c7	,	0x0072	,	0x0159	}	,
		{	0x02c7	,	0x0074	,	0x0165	}	,
		{	0x02c7	,	0x004e	,	0x0147	}	,
		{	0x02c7	,	0x0043	,	0x010c	}	,
		{	0x02c7	,	0x005a	,	0x017d	}	,
		{	0x02c7	,	0x0044	,	0x010e	}	,
		{	0x02c7	,	0x0053	,	0x0160	}	,
		{	0x02c7	,	0x004c	,	0x013d	}	,
		{	0x02c7	,	0x0045	,	0x011a	}	,
		{	0x02c7	,	0x0052	,	0x0158	}	,
		{	0x02c7	,	0x0054	,	0x0164	}	,
		{	0x02c7	,	0x0020	,	0x02c7	}	,
		{	0x00b8	,	0x0063	,	0x00e7	}	,
		{	0x00b8	,	0x0073	,	0x015f	}	,
		{	0x00b8	,	0x0074	,	0x0163	}	,
		{	0x00b8	,	0x0043	,	0x00c7	}	,
		{	0x00b8	,	0x0053	,	0x015e	}	,
		{	0x00b8	,	0x0054	,	0x0162	}	,
		{	0x00b8	,	0x0020	,	0x00b8	}	,
		{	0x00b0	,	0x0075	,	0x016f	}	,
		{	0x00b0	,	0x0055	,	0x016e	}	,
		{	0x00b0	,	0x0020	,	0x00b0	}	,

	};
	
	private static SlovakLayout instance = new SlovakLayout();
	
	private SlovakLayout() {
	}
	
	public static SlovakLayout getInstance() {
		return instance;
	}	
	
	@Override
	public int[][] getLUT() {
		return LUT;
	}

	@Override
	public void type(String text) {
		super.type(LUT, DEADKEY_LUT, DEADKEYS, text, (byte)0);
	}	
	
	@Override
	public void type(String text, byte modifiers) {
		super.type(LUT, DEADKEY_LUT, DEADKEYS, text, modifiers);
	}
	
	@Override
	public char getChar(int scanCode, boolean capsLock, boolean shift, boolean altGr) {
		return super.getChar(LUT, scanCode, capsLock, shift, altGr);
	}	
	
	@Override
	public String getLocaleName() {		
		return LOCALE_NAME;
	}			

	@Override
	public int[][] getDeadkeyLUT() {		
		return DEADKEY_LUT;
	}

	@Override
	public int[] getDeadkeys() {
		return DEADKEYS;
	}
	
}
